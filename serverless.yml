service: skeleton-node-serverless

frameworkVersion: '2'

custom:
  esbuild:
    # sourcemap: true
    # exclude: 
    # - 'aws-sdk'
    # target: 'node14'
    # define: 
    #   'require.resolve': undefined
    # platform: 'node'
    # concurrency: 10
    bundle: true
    minify: false
  tableName: 'users-${sls:stage}'
  serverlessPluginTypescript:
    tsConfigFileLocation: './tsconfig.build.json'

package:
  individually: true
  
provider:
  name: aws
  runtime: nodejs14.x
  lambdaHashingVersion: 20201221
  region: us-east-1
  memorySize: 256
  apiName: skeleton-node-serverless
  timeout: 5
  logRetentionInDays: 5
  tracing:
    apiGateway: true
    lambda: true
  # vpc:
  #   securityGroupIds:
  #     - securityGroupId1
  #   subnetIds:
  #     - subnetId1
  environment:
    SLS_DEBUG: "*"
    # AWS_NODEJS_CONNECTION_REUSE_ENABLED: '1'
    # NODE_OPTIONS: '--enable-source-maps --stack-trace-limit=1000'
  stage: dev
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - "*"
          Resource:
            - { "Fn::GetAtt": ["UsersTable", "Arn"] }

plugins:
  - serverless-esbuild
  - serverless-offline

resources:
  Resources:
    ProviderDynamoDBTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.tableName}

functions:
  createUser:
    handler: src/core/app.createUser
    events:
      - http: "POST /users"
